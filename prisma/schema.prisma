generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model posts {
  post_id       Int      @id @default(autoincrement())
  type          String
  departCountry String
  departTime    String
  arriveCountry String
  arriveTime    String
  content       String
  paymentWays   String[]
  accptedItems  String[]
  weight        String
  postTime      String
  poster_id     Int
  flight_id     String
  users         users    @relation(fields: [poster_id], references: [user_id], onDelete: Cascade)
}

model products {
  product_id                        Int    @id @default(autoincrement())
  shipper_id                        Int
  receiver_id                       Int
  status                            String
  weight                            String
  productName                       String
  flightNumber                      String
  users_products_receiver_idTousers users  @relation("products_receiver_idTousers", fields: [receiver_id], references: [user_id], onDelete: Cascade)
  users_products_shipper_idTousers  users  @relation("products_shipper_idTousers", fields: [shipper_id], references: [user_id], onDelete: Cascade)
}

model reviews {
  review_id                           Int    @id @default(autoincrement())
  content                             String
  reviewSender                        Int
  reviewReceiver                      Int
  users_reviews_reviewReceiverTousers users  @relation("reviews_reviewReceiverTousers", fields: [reviewReceiver], references: [user_id], onDelete: Cascade)
  users_reviews_reviewSenderTousers   users  @relation("reviews_reviewSenderTousers", fields: [reviewSender], references: [user_id], onDelete: Cascade)
}

model users {
  user_id                               Int        @id @default(autoincrement())
  userName                              String     @unique(map: "user.id_unique")
  password                              String
  email                                 String
  phoneNumber                           Int
  image                                 String
  ratings                               Decimal[]  @db.Decimal
  pendingRequests                       String[]
  location                              String
  contactList                           String[]
  verified                              Boolean
  posts                                 posts[]
  products_products_receiver_idTousers  products[] @relation("products_receiver_idTousers")
  products_products_shipper_idTousers   products[] @relation("products_shipper_idTousers")
  reviews_reviews_reviewReceiverTousers reviews[]  @relation("reviews_reviewReceiverTousers")
  reviews_reviews_reviewSenderTousers   reviews[]  @relation("reviews_reviewSenderTousers")
}
